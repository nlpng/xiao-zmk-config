/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define NAV 1
#define SYMBO 2
#define MOUSE 3
#define SCROLL 4

#include "key_def/42.h"

/* Homerow mods */

#define QUICK_TAP_MS 150

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define KEYS_T LH2 LH1 LH0 RH0 RH1                                                  // thumbs


/ {
        behaviors {

                // Positional Homerow mods
                // Homerow mods that prevent accidental activations when rolling keys,
                // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
                // qwerty.
                //
                // Works by only allowing a mod to activate within tapping-term if
                // it's on the opposite side of the keyboard or on the same side thumb
                // keys.

                // Further optimization using urob's timerless homerow mods method:
                // https://github.com/urob/zmk-config#timeless-homerow-mods

                hml: homerow_mods_left {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;

                        flavor = "balanced";
                        tapping-term-ms = <280>;
                        quick-tap-ms = <QUICK_TAP_MS>;
                        require-prior-idle-ms = <100>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <KEYS_R KEYS_T>;
                        hold-trigger-on-release;
                };

                hmr: homerow_mods_right {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        bindings = <&kp>, <&kp>;

                        flavor = "balanced";
                        tapping-term-ms = <280>;
                        quick_tap_ms = <QUICK_TAP_MS>;
                        require-prior-idle-ms = <100>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <KEYS_L KEYS_T>;
                        hold-trigger-on-release;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "DEF";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |               |  Y   |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  | ESC |   |  ~  |  H   |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |  _  |   |  "  |  N   |  M  |  <  |  >  |  ?  |
// |  -  |  =  |  +  | TAB |SPACE| ALT |   | RET | BSPC |                 |  \  |
                        bindings = <
   &kp Q     &kp W          &kp E           &kp R           &kp T                                    &kp Y    &kp U           &kp I           &kp O          &kp P
   &kp A     &hml LALT S    &hml LCTRL D    &hml LSHFT F    &kp G          &kp ESC     &kp GRAVE     &kp H    &hmr LSHFT J    &hmr LCTRL K    &hmr LALT L    &kp SEMI
   &kp Z     &kp X          &kp C           &kp V           &kp B          &kp UNDER   &kp SQT       &kp N    &kp M           &kp COMMA       &kp DOT        &kp FSLH
   &kp MINUS &kp EQUAL      &kp PLUS        &kp TAB         &lt NAV SPACE  &kp LALT    &lt SYMBO RET &kp BSPC                                                &kp BSLH
                        >;
                };
                nav_layer {
                        dispaly-name = "NAV";
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |               |  6   |  7  |  8  |  9  |  0  |
// |     |     |     |     |     |     |   |     | LFT  | DWN |  UP | RGT |     |
// |     | CUT |COPY |PASTE|     |     |   |     |      |     |     |     |     |
// |     |     |     |     |     |     |   | RET | BSPC |                 |     |
                        bindings = <
   &kp N1      &kp N2    &kp N3      &kp N4      &kp N5                        &kp N6    &kp N7    &kp N8  &kp N9    &kp N0
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &trans
   &trans      &kp K_CUT &kp K_COPY  &kp K_PASTE &trans    &trans    &trans    &trans    &trans    &trans  &trans    &trans
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans                                &trans
                        >;
                };

                symbol_layer {
                        display-name = "SYM";
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |               |  ^   |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |     |   |     |      |     |     |  [  |  ]  |
// |     |     |     |     |     |     |   |     |      |     |     |  {  |  }  |
// |     |     |     |     |     |     |   |     |      |                 |     |
                        bindings = <
   &kp EXCL    &kp AT    &kp HASH    &kp DLLR    &kp PRCNT                     &kp CARET   &kp AMPS    &kp ASTRK    &kp LPAR    &kp RPAR
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans      &trans      &trans       &kp LBKT    &kp RBKT
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans      &trans      &trans       &kp LBRC    &kp RBRC
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans                                           &trans
                        >;
                };

                MOUSE {
                        display-name = "MSE";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |               |      |      |      |      |     |
// |     |     |     |     |     |     |   |     |      | LCLK | RCLK |      |     |
// |     |     |     |     |     |     |   |     |      |      |      |      |     |
// |     |     |     |     |     |     |   |     |      |                    |     |
                        bindings = <
   &trans      &trans    &trans      &trans      &trans                        &trans      &trans      &trans       &trans      &trans
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans      &mkp MB1    &mkp MB2     &trans      &trans
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans      &trans      &trans       &trans      &trans
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans                                           &trans
                        >;
                };

                SCROLL {
                        display-name = "SCR";
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |               |      |      |      |      |     |
// |     |     |     |     |     |     |   |     |      |      |      |      |     |
// |     |     |     |     |     |     |   |     |      |      |      |      |     |
// |     |     |     |     |     |     |   |     |      |                    |     |
                        bindings = <
   &trans      &trans    &trans      &trans      &trans                        &trans      &trans      &trans       &trans      &trans
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans      &trans      &trans       &trans      &trans
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans      &trans      &trans       &trans      &trans
   &trans      &trans    &trans      &trans      &trans    &trans    &trans    &trans                                           &trans
                        >;
                };
        };
};
